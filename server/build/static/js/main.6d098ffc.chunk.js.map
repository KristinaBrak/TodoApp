{"version":3,"sources":["ApiHook.js","components/content/todo-list/todo/random-image/RandomImage.jsx","consts.js","components/content/todo-list/todo/Todo.jsx","components/content/todo-list/TodoList.jsx","components/content/todo-list/TodoListHooks.js","components/content/Content.jsx","components/footer/Footer.jsx","components/nav-bar/BarItem.jsx","components/nav-bar/NavBar.jsx","App.jsx","index.jsx"],"names":["useAPI","url","useState","data","setData","loading","setLoading","error","setError","useEffect","fetch","then","response","json","catch","err","message","RandomImage","kitten","images","fixed_height_small","style","width","display","justifyContent","backgroundColor","height","maxWidth","src","alt","Todo","id","isDone","name","markSubmit","onRemove","className","type","onClick","undefined","TodoList","initialTodos","todos","setTodos","text","todo","uuid","updatedTodos","filter","useTodos","addTodo","removeTodo","setTodoDone","setText","animatedTodos","useTransition","from","opacity","transform","enter","leave","value","onChange","event","target","reverse","map","item","props","key","div","Content","Footer","BarItem","handleClick","NavBar","alert","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d098ffc.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useAPI = (url) => {\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const fetchData = () => {\n    fetch(url)\n      .then((response) => response.json())\n      .then((json) => {\n        setData(json);\n        setLoading(false);\n        setError(\"\");\n      })\n      .catch((err) => {\n        setLoading(false);\n        setError(err.message);\n      });\n  };\n\n  useEffect(fetchData, [url]);\n\n  return [loading, error, data];\n};\n\nexport default useAPI;\n","import React from \"react\";\nimport { GIPHY_URL } from \"consts\";\nimport useAPI from \"ApiHook\";\n\nconst RandomImage = () => {\n  const [loading, error, data] = useAPI(GIPHY_URL);\n\n  if (loading) {\n    return <h2>Loading...</h2>;\n  }\n  if (error) {\n    return <p>{error}</p>;\n  }\n  const kitten = data.data.images.fixed_height_small.url;\n  return (\n    <div\n      style={{\n        width: \"160px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        backgroundColor: \"hsla(0, 100%, 54%, 1)\",\n      }}\n    >\n      <img\n        style={{ height: \"80px\", maxWidth: \"160px\" }}\n        src={kitten}\n        alt=\"kitten\"\n      />\n    </div>\n  );\n};\n\nexport default RandomImage;\n","export const GIPHY_URL =\n  \"http://api.giphy.com/v1/gifs/random?tag=kitten&api_key=N6bV7xiE2f6JaGW9lqPGibP3zYTFhK0h\";\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport RandomImage from \"./random-image/RandomImage\";\nimport \"./todo.css\";\n\nconst Todo = ({ id, isDone, name, markSubmit, onRemove }) => (\n  <div className=\"todo-element\">\n    <input type=\"checkbox\" onClick={() => markSubmit(id)} />\n    <p className={isDone ? \"completed\" : undefined}>{name}</p>\n    <RandomImage />\n    <button className=\"remove\" onClick={() => onRemove(id)}>\n      x\n    </button>\n  </div>\n);\n\nTodo.propTypes = {\n  id: PropTypes.string,\n  isDone: PropTypes.bool,\n  name: PropTypes.string,\n  markSubmit: PropTypes.func,\n  onRemove: PropTypes.func,\n};\n\nexport default Todo;\n","import React, { useState } from \"react\";\nimport { useTransition, animated } from \"react-spring\";\nimport { v4 as uuid } from \"uuid\";\nimport Todo from \"./todo/Todo\";\nimport \"./todoList.css\";\nimport { useTodos } from \"./TodoListHooks\";\n\nconst TodoList = () => {\n  const [todos, addTodo, removeTodo, setTodoDone] = useTodos([\n    { id: uuid(), name: \"Eat\", isDone: false },\n    { id: uuid(), name: \"Sleep\", isDone: false },\n    { id: uuid(), name: \"Rap\", isDone: false },\n    { id: uuid(), name: \"Repeat\", isDone: false },\n  ]);\n  const [text, setText] = useState(\"\");\n\n  const animatedTodos = useTransition(todos, (todo) => todo.id, {\n    from: { opacity: 0, transform: \"translateX(-200px)\" },\n    enter: { opacity: 1, transform: \"translateX(0)\" },\n    leave: { opacity: 0, transform: \"translateX(200px)\" },\n  });\n\n  return (\n    <div className=\"todo-list\">\n      <h2>Todo List</h2>\n\n      <input\n        type=\"text\"\n        value={text}\n        onChange={(event) => setText(event.target.value)}\n      />\n\n      <button\n        className=\"add\"\n        onClick={() => {\n          addTodo(text);\n          setText(\"\");\n        }}\n      >\n        Add\n      </button>\n      {animatedTodos\n        .reverse()\n        .map(({ item: { id, name, isDone }, props, key }) => {\n          return (\n            <animated.div\n              key={key}\n              style={{ ...props, width: \"100%\", display: \"flex\" }}\n            >\n              <Todo\n                id={id}\n                isDone={isDone}\n                name={name}\n                onRemove={removeTodo}\n                markSubmit={setTodoDone}\n              />\n            </animated.div>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default TodoList;\n","import { useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\n\nexport const useTodos = (initialTodos) => {\n  const [todos, setTodos] = useState(initialTodos);\n\n  const addTodo = (text) => {\n    const todo = {\n      id: uuid(),\n      name: text,\n      isDone: false,\n    };\n    const updatedTodos = [...todos, todo];\n\n    setTodos(updatedTodos);\n  };\n\n  const removeTodo = (id) => {\n    const updatedTodos = [...todos].filter((todo) => todo.id !== id);\n    setTodos(updatedTodos);\n  };\n\n  const setTodoDone = (id) => {\n    const updatedTodos = [...todos];\n    const todo = updatedTodos.filter((todo) => todo.id === id);\n    todo[0].isDone = !todo[0].isDone;\n    setTodos(updatedTodos);\n  };\n\n  return [todos, addTodo, removeTodo, setTodoDone];\n};\n","import React from \"react\";\nimport TodoList from \"./todo-list/TodoList\";\n\nfunction Content() {\n  return <TodoList />;\n}\n\nexport default Content;\n","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <div className=\"footer\">\n      <p>All rights reserved </p>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n\nconst BarItem = ({ name, handleClick }) => (\n  <li className=\"bar-item\" onClick={handleClick}>\n    {name}\n  </li>\n);\n\nexport default BarItem;\n","import React from \"react\";\nimport BarItem from \"./BarItem\";\n\nfunction NavBar() {\n  const handleClick = () => {\n    alert(\"Hello\");\n  };\n\n  return (\n    <ul className=\"nav-bar\">\n      <BarItem name=\"Home\" handleClick={handleClick} />\n      <BarItem name=\"Todos\" handleClick={handleClick} />\n    </ul>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport Content from \"./components/content/Content\";\nimport Footer from \"./components/footer/Footer\";\nimport NavBar from \"./components/nav-bar/NavBar\";\nimport \"./style.css\";\n\nfunction App() {\n  return (\n    <div className=\"about-me\">\n      <NavBar />\n      <Content />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}